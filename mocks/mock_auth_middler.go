// Code generated by MockGen. DO NOT EDIT.
// Source: Domain/auth.middleware.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthMiddlerWareInterface is a mock of AuthMiddlerWareInterface interface.
type MockAuthMiddlerWareInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthMiddlerWareInterfaceMockRecorder
}

// MockAuthMiddlerWareInterfaceMockRecorder is the mock recorder for MockAuthMiddlerWareInterface.
type MockAuthMiddlerWareInterfaceMockRecorder struct {
	mock *MockAuthMiddlerWareInterface
}

// NewMockAuthMiddlerWareInterface creates a new mock instance.
func NewMockAuthMiddlerWareInterface(ctrl *gomock.Controller) *MockAuthMiddlerWareInterface {
	mock := &MockAuthMiddlerWareInterface{ctrl: ctrl}
	mock.recorder = &MockAuthMiddlerWareInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthMiddlerWareInterface) EXPECT() *MockAuthMiddlerWareInterfaceMockRecorder {
	return m.recorder
}

// AuthMiddleware mocks base method.
func (m *MockAuthMiddlerWareInterface) AuthMiddleware() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthMiddleware")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// AuthMiddleware indicates an expected call of AuthMiddleware.
func (mr *MockAuthMiddlerWareInterfaceMockRecorder) AuthMiddleware() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthMiddleware", reflect.TypeOf((*MockAuthMiddlerWareInterface)(nil).AuthMiddleware))
}

// RoleBasedMiddleWare mocks base method.
func (m *MockAuthMiddlerWareInterface) RoleBasedMiddleWare(roles ...string) gin.HandlerFunc {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range roles {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RoleBasedMiddleWare", varargs...)
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// RoleBasedMiddleWare indicates an expected call of RoleBasedMiddleWare.
func (mr *MockAuthMiddlerWareInterfaceMockRecorder) RoleBasedMiddleWare(roles ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RoleBasedMiddleWare", reflect.TypeOf((*MockAuthMiddlerWareInterface)(nil).RoleBasedMiddleWare), roles...)
}
